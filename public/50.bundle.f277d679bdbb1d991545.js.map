{"version":3,"file":"50.bundle.f277d679bdbb1d991545.js","mappings":"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","sources":["webpack:///../../../extensions/test-extension/src/id.js","webpack:///../../../extensions/test-extension/src/custom-context-menu/codingValues.ts","webpack:///../../../extensions/test-extension/src/custom-context-menu/contextMenuCodeItem.ts","webpack:///../../../extensions/test-extension/src/custom-context-menu/findingsContextMenu.ts","webpack:///../../../extensions/test-extension/src/custom-attribute/sameAs.ts","webpack:///../../../extensions/test-extension/src/custom-attribute/numberOfDisplaySets.ts","webpack:///../../../extensions/test-extension/src/custom-attribute/maxNumImageFrames.ts","webpack:///../../../extensions/test-extension/src/index.tsx","webpack:///../../../extensions/test-extension/src/getCustomizationModule.ts"],"sourcesContent":["import packageJson from '../package.json';\r\n\r\nconst id = packageJson.name;\r\n\r\nexport { id };\r\n","/**\r\n * Coding values is a map of simple string coding values to a set of\r\n * attributes associated with the coding value.\r\n *\r\n * The simple string is in the format `<codingSchemeDesignator>:<codingValue>`\r\n * That allows extracting the DICOM attributes from the designator/value, and\r\n * allows for passing around the simple string.\r\n * The additional attributes contained in the object include:\r\n *       * text - this is the coding scheme text display value, and may be language specific\r\n *       * type - this defines a named type, typically 'site'.  Different names can be used\r\n *                to allow setting different findingSites values in order to define a hierarchy.\r\n *       * color - used to apply annotation color\r\n * It is also possible to define additional attributes here, used by custom\r\n * extensions.\r\n *\r\n * See https://dicom.nema.org/medical/dicom/current/output/html/part16.html\r\n * for definitions of SCT and other code values.\r\n */\r\nconst codingValues = {\r\n  id: 'codingValues',\r\n\r\n  // Sites\r\n  'SCT:69536005': {\r\n    text: 'Head',\r\n    type: 'site',\r\n  },\r\n  'SCT:45048000': {\r\n    text: 'Neck',\r\n    type: 'site',\r\n  },\r\n  'SCT:818981001': {\r\n    text: 'Abdomen',\r\n    type: 'site',\r\n  },\r\n  'SCT:816092008': {\r\n    text: 'Pelvis',\r\n    type: 'site',\r\n  },\r\n\r\n  // Findings\r\n  'SCT:371861004': {\r\n    text: 'Mild intimal coronary irregularities',\r\n    color: 'green',\r\n  },\r\n  'SCT:194983005': {\r\n    text: 'Aortic insufficiency',\r\n    color: 'darkred',\r\n  },\r\n  'SCT:399232001': {\r\n    text: '2-chamber',\r\n  },\r\n  'SCT:103340004': {\r\n    text: 'SAX',\r\n  },\r\n  'SCT:91134007': {\r\n    text: 'MV',\r\n  },\r\n  'SCT:122972007': {\r\n    text: 'PV',\r\n  },\r\n\r\n  // Orientations\r\n  'SCT:24422004': {\r\n    text: 'Axial',\r\n    color: '#000000',\r\n    type: 'orientation',\r\n  },\r\n  'SCT:81654009': {\r\n    text: 'Coronal',\r\n    color: '#000000',\r\n    type: 'orientation',\r\n  },\r\n  'SCT:30730003': {\r\n    text: 'Sagittal',\r\n    color: '#000000',\r\n    type: 'orientation',\r\n  },\r\n};\r\n\r\nexport default codingValues;\r\n","const codeMenuItem = {\r\n  id: '@ohif/contextMenuAnnotationCode',\r\n\r\n  /** Applies the code value setup for this item */\r\n  transform: function (customizationService) {\r\n    const { code: codeRef } = this;\r\n    if (!codeRef) throw new Error(`item ${this} has no code ref`);\r\n    const codingValues = customizationService.get('codingValues');\r\n    const code = codingValues[codeRef];\r\n    return {\r\n      ...this,\r\n      codeRef,\r\n      code: { ref: codeRef, ...code },\r\n      label: code.text,\r\n      commands: [\r\n        {\r\n          commandName: 'updateMeasurement',\r\n        },\r\n      ],\r\n    };\r\n  },\r\n};\r\n\r\nexport default codeMenuItem;\r\n","const findingsContextMenu = {\r\n  id: 'measurementsContextMenu',\r\n  customizationType: 'ohif.contextMenu',\r\n  menus: [\r\n    {\r\n      id: 'forExistingMeasurement',\r\n      // selector restricts context menu to when there is nearbyToolData\r\n      selector: ({ nearbyToolData }) => !!nearbyToolData,\r\n      items: [\r\n        {\r\n          customizationType: 'ohif.contextSubMenu',\r\n          label: 'Site',\r\n          actionType: 'ShowSubMenu',\r\n          subMenu: 'siteSelectionSubMenu',\r\n        },\r\n        {\r\n          customizationType: 'ohif.contextSubMenu',\r\n          label: 'Finding',\r\n          actionType: 'ShowSubMenu',\r\n          subMenu: 'findingSelectionSubMenu',\r\n        },\r\n        {\r\n          // customizationType is implicit here in the configuration setup\r\n          label: 'Delete Measurement',\r\n          commands: [\r\n            {\r\n              commandName: 'deleteMeasurement',\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          label: 'Add Label',\r\n          commands: [\r\n            {\r\n              commandName: 'setMeasurementLabel',\r\n            },\r\n          ],\r\n        },\r\n\r\n        // The example below shows how to include a delegating sub-menu,\r\n        // Only available on the @ohif/mnGrid hanging protocol\r\n        // To demonstrate, select the 3x1 layout from the protocol menu\r\n        // and right click on a measurement.\r\n        {\r\n          label: 'IncludeSubMenu',\r\n          selector: ({ protocol }) => protocol?.id === '@ohif/mnGrid',\r\n          delegating: true,\r\n          subMenu: 'orientationSelectionSubMenu',\r\n        },\r\n      ],\r\n    },\r\n\r\n    {\r\n      id: 'orientationSelectionSubMenu',\r\n      selector: ({ nearbyToolData }) => false,\r\n      items: [\r\n        {\r\n          customizationType: '@ohif/contextMenuAnnotationCode',\r\n          code: 'SCT:24422004',\r\n        },\r\n        {\r\n          customizationType: '@ohif/contextMenuAnnotationCode',\r\n          code: 'SCT:81654009',\r\n        },\r\n      ],\r\n    },\r\n\r\n    {\r\n      id: 'findingSelectionSubMenu',\r\n      selector: ({ nearbyToolData }) => false,\r\n      items: [\r\n        {\r\n          customizationType: '@ohif/contextMenuAnnotationCode',\r\n          code: 'SCT:371861004',\r\n        },\r\n        {\r\n          customizationType: '@ohif/contextMenuAnnotationCode',\r\n          code: 'SCT:194983005',\r\n        },\r\n      ],\r\n    },\r\n\r\n    {\r\n      id: 'siteSelectionSubMenu',\r\n      selector: ({ nearbyToolData }) => !!nearbyToolData,\r\n      items: [\r\n        {\r\n          customizationType: '@ohif/contextMenuAnnotationCode',\r\n          code: 'SCT:69536005',\r\n        },\r\n        {\r\n          customizationType: '@ohif/contextMenuAnnotationCode',\r\n          code: 'SCT:45048000',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport default findingsContextMenu;\r\n","/**\r\n * This function extracts an attribute from the already matched display sets, and\r\n * compares it to the attribute in the current display set, and indicates if they match.\r\n * From 'this', it uses:\r\n *    `sameAttribute` as the attribute name to look for\r\n *    `sameDisplaySetId` as the display set id to look for\r\n * From `options`, it looks for \r\n */\r\nexport default function (displaySet, options) {\r\n  const { sameAttribute, sameDisplaySetId } = this;\r\n  if( !sameAttribute ) {\r\n    console.log(\"sameAttribute not defined in\", this);\r\n    return `sameAttribute not defined in ${this.id}`;\r\n  }\r\n  if( !sameDisplaySetId ) {\r\n    console.log(\"sameDisplaySetId not defined in\", this);\r\n    return `sameDisplaySetId not defined in ${this.id}`;\r\n  }\r\n  const { displaySetMatchDetails, displaySets } = options;\r\n  const match = displaySetMatchDetails.get(sameDisplaySetId);\r\n  if( !match ) {\r\n    console.log(\"No match for display set\", sameDisplaySetId);\r\n    return false;\r\n  }\r\n  const { displaySetInstanceUID } = match;\r\n  const altDisplaySet = displaySets.find(it => it.displaySetInstanceUID==displaySetInstanceUID);\r\n  if( !altDisplaySet ) {\r\n    console.log(\"No display set found with\", displaySetInstanceUID, \"in\", displaySets);\r\n    return false;\r\n  }\r\n  const testValue = altDisplaySet[sameAttribute];\r\n  return testValue===displaySet[sameAttribute];\r\n}","export default (study, extraData) => extraData?.displaySets?.length;","export default (study, extraData) => Math.max(...(extraData?.displaySets?.map?.(ds => (ds.numImageFrames ?? 0))) || [0]);","import { Types } from '@ohif/core';\r\n\r\nimport { id } from './id';\r\n\r\nimport getCustomizationModule from './getCustomizationModule';\r\n// import {setViewportZoomPan, storeViewportZoomPan } from './custom-viewport/setViewportZoomPan';\r\nimport sameAs from './custom-attribute/sameAs';\r\nimport numberOfDisplaySets from './custom-attribute/numberOfDisplaySets';\r\nimport maxNumImageFrames from './custom-attribute/maxNumImageFrames';\r\n\r\n/**\r\n * The test extension provides additional behaviour for testing various\r\n * customizations and settings for OHIF.\r\n */\r\nconst testExtension: Types.Extensions.Extension = {\r\n  /**\r\n   * Only required property. Should be a unique value across all extensions.\r\n   */\r\n  id,\r\n\r\n  /** Register additional behaviour:\r\n   *   * HP custom attribute seriesDescriptions to retrieve an array of all series descriptions\r\n   *   * HP custom attribute numberOfDisplaySets to retrieve the number of display sets\r\n   *   * HP custom attribute numberOfDisplaySetsWithImages to retrieve the number of display sets containing images\r\n   *   * HP custom attribute to return a boolean true, when the attribute sameAttribute has the same\r\n   *     value as another series description in an already matched display set selector named with the value\r\n   *     in `sameDisplaySetId`\r\n   */\r\n  preRegistration: ({ servicesManager }: Types.Extensions.ExtensionParams) => {\r\n    const { hangingProtocolService } = servicesManager.services;\r\n    hangingProtocolService.addCustomAttribute(\r\n      'numberOfDisplaySets',\r\n      'Number of displays sets',\r\n      numberOfDisplaySets\r\n    );\r\n    hangingProtocolService.addCustomAttribute(\r\n      'maxNumImageFrames',\r\n      'Maximum of number of image frames',\r\n      maxNumImageFrames\r\n    );\r\n    hangingProtocolService.addCustomAttribute(\r\n      'sameAs',\r\n      'Match an attribute in an existing display set',\r\n      sameAs\r\n    );\r\n  },\r\n\r\n  /** Registers some customizations */\r\n  getCustomizationModule,\r\n};\r\n\r\nexport default testExtension;\r\n","import {\r\n  codingValues,\r\n  contextMenuCodeItem,\r\n  findingsContextMenu,\r\n} from './custom-context-menu';\r\n\r\nexport default function getCustomizationModule() {\r\n  return [\r\n    {\r\n      name: 'custom-context-menu',\r\n      value: [codingValues, contextMenuCodeItem, findingsContextMenu],\r\n    },\r\n  ];\r\n}\r\n"],"names":["id","packageJson","text","type","color","transform","customizationService","code","codeRef","this","Error","get","ref","label","commands","commandName","customizationType","menus","selector","_ref","nearbyToolData","items","actionType","subMenu","_ref2","protocol","delegating","_ref3","_ref4","_ref5","displaySet","options","sameAttribute","sameDisplaySetId","console","log","displaySetMatchDetails","displaySets","match","displaySetInstanceUID","altDisplaySet","find","it","study","extraData","length","Math","max","map","ds","numImageFrames","preRegistration","servicesManager","hangingProtocolService","services","addCustomAttribute","numberOfDisplaySets","maxNumImageFrames","sameAs","getCustomizationModule","name","value","codingValues","contextMenuCodeItem","findingsContextMenu"],"sourceRoot":""}